# Author @patriciogv - 2015

cameras:
    camera1:
        type: isometric
styles:
    tools:
        shaders:
            blocks: 
                global: |
                    // Coord System
                    //================================
                    varying vec3 v_pos;
                    vec2 TileCoords(){return fract(v_pos.xy*0.0002445);}
                position: |
                    v_pos = modelPosition().xyz * 32767.;
    texture:
        base: polygons
        mix: tools 
        lighting: false
        shaders:
            uniforms:
                u_texture: water.gif
                u_scale: 3.
            blocks:
                global: |
                    vec4 TileTexture(sampler2D tex, float scale) {
                        vec2 IN = TileCoords()*scale;
                        vec2 OUT = TileCoords()*scale*2.;
                        return mix(texture2D(tex,fract(IN)), texture2D(tex,fract(OUT)), fract(u_map_position.z));
                    }
                color: |
                    vec2 st = TileCoords()*3. ;
                    color.rgb = TileTexture(u_texture,u_scale).rgb;
    texturelines:
        base: lines
        mix: tools 
        lighting: false
        shaders:
            uniforms:
                u_texture: water.gif
            blocks:
                global: |
                    vec4 TileTexture(sampler2D tex, float scale) {
                        vec2 IN = TileCoords()*scale;
                        vec2 OUT = TileCoords()*scale*2.;
                        return mix(texture2D(tex,fract(IN)), texture2D(tex,fract(OUT)), fract(u_map_position.z));
                    }
                color: |
                    vec2 st = TileCoords()*3.0 ;
                    color.rgb = TileTexture(u_texture,3.).rgb;
         
    grass:
        base: polygons
        mix: texture
        shaders:
            uniforms:
                u_texture: grass.gif
    water:
        base: polygons
        mix: texture
        shaders:
            uniforms:
                u_texture: water.gif
    dirt:
        base: polygons
        mix: texture
        shaders:
            uniforms:
                u_texture: dirt.gif
    stone:
        base: polygons
        mix: texture
        shaders:
            uniforms:
                u_texture: stone.gif
                u_scale: 10.
    stonelines:
        base: lines
        mix: texturelines
        shaders:
            uniforms:
                u_texture: stone.gif

sources:
    osm:
        type: TopoJSON
        url:  https://vector.mapzen.com/osm/all/{z}/{x}/{y}.topojson
        max_zoom: 16

layers:
    earth:
        data: { source: osm }
        draw:
            dirt:
                order: 0
    landuse:
        data: { source: osm }
        draw:
            grass:
                order: 1
    water:
        data: { source: osm }
        draw:
            water:
                order: 3
                color: [0.271,0.267,0.243]
    roads:
        data: { source: osm }
        filter: { not: { highway: service, kind: rail } }
        properties: { width: 3 }
        draw:
            stonelines:
                order: 4
                width: 8
    buildings:
        data: { source: osm }
        draw:
            stone:
                order: 5
