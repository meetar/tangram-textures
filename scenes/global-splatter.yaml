import:
    - https://tangrams.github.io/blocks/generative/noise.yaml
styles:
    splatter:
        mix: [generative-noise]
        base: polygons
        animated: false # set to true for extra madness
        shaders:
            defines:
                TANGRAM_WORLD_POSITION_WRAP: false
            blocks:
                position: |
                    // make tile worldspace coordinates available to the global block
                    v_pos = modelPosition();
                global: |
                    varying vec4 v_pos;
                    vec2 TileCoords(){
                        return v_pos.xy;
                    }
                color: |
                    vec2 st = worldPosition().xy / 1048576.;
                    // st = TileCoords().xy;

                    float t = u_time;
                    color.rgb = vec3(0.78,0.78,0.78);
                    color.rgb = mix(color.rgb, vec3(1.0), step(.4, snoise( vec3(st*1.,t*1.+3232.0) ) ));
                    color.rgb = mix(color.rgb, vec3(0.7), step(.3, snoise( vec3(st*4.,t*2.+123.0) ) ));
                    color.rgb = mix(color.rgb, vec3(1.0), step(.2, snoise( vec3(st*4.,t+0.0) ) ));
                    color.rgb = mix(color.rgb, vec3(0.941), step(.3, snoise( vec3(st*4.,t+0.0) ) ));
                    color.rgb = mix(color.rgb, vec3(0.647), step(.2, snoise( vec3(st*7.,t+0.0) ) ));
                    color.rgb = mix(color.rgb, vec3(0.377), step(.4, snoise( vec3(st*7.,t+0.0) ) ));
                    color.rgb = mix(color.rgb, vec3(1.000), step(.5, snoise( vec3(st*2.,t+64.0) ) ));

sources:
    nextzen:
        type: MVT
        url: https://tile.nextzen.org/tilezen/vector/v1/256/all/{z}/{x}/{y}.mvt
        url_params:
            api_key: 3XqXMjEdT2StnrIRJ4HYbg
        max_zoom: 16

layers:
    earth:
        data: { source: nextzen }
        draw:
            splatter:
                order: 0
    water:
        data: { source: nextzen }
        draw:
            polygons:
                order: 3
                color: dodgerblue
